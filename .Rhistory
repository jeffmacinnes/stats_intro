AVB_Data_Eyes_Time <- read.csv("~/Desktop/AVB_Data_Eyes_Time.csv")
View(AVB_Data_Eyes_Time)
aov
aov.out = aov(eyeTime ~ filter, data=AVB_Data_Eyes_Time)
aov.out
summary(aov.out)
summmary(aov.out)
library(psych)
summary(aov.out)
summary(AVB_Data_Eyes_Time)
plot(eyeTime ~ filter, data=AVB_Data_Eyes_Time)
a<-5
pets <- c('cat', 'bunny')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd("/Volumes/DIBS/Johnson/BassConnections/artVisionBrain/Notes/stats_intro")
getwd()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(psych)
testData = read.csv('data/exampleData.tsv')
testData <- read.csv('data/exampleData.tsv', sep='\t')
names(testData)
head(testData, n=10)
# if you haven't already, set your working directory to 'stats_intro'
#setwd("<dirPath>/stats_intro")
# read the data table in
testData <- read.csv('data/exampleData.tsv', sep='\t')
# print the first few rows
head(testData, n=5)
dt <- read.csv('data/exampleData.tsv', sep='\t', row.names=0)
dt <- read.csv('data/exampleData.tsv', sep='\t', row.names=1)
head(dt, n=5)
# if you need to install the psych library:
# install.packages("psych", dependencies=TRUE)
library(psych)  # this is an external library that has some really useful tools within it
describe(dt)
plot(dt.IQ)
dt
qplot(IQ, data=dt, binwidth=5)
qplot(IQ, data=dt,
binwidth=3,
main="Histogram for IQ",
col=I("white"))
qplot(IQ, data=dt,
binwidth=5,
main="Histogram for IQ",
col=I("white"))
ggplot(data=dt) + geom_point()
ggplot(data=dt, aes(x=c(0, 1), y=c(dt$IQ, dt$noseMovie))) + geom_point()
plot(dt$IQ)
qplot(IQ, noseMovie, data=dt)
qplot(1:40, noseMovie, data=dt)
qplot(seq(1,40), noseMovie, data=dt)
plot(seq(1,40), dt$noseMovie)
a <- seq(0,40,1)
a <- seq(1,40,1)
plot(a, dt$IQ)
a <- rep(1,40)
plot(a, dt$IQ)
qplot(IQ, noseMove, data=dt, geom="boxplot")
qplot(IQ, noseMovie, data=dt, geom="boxplot")
qplot(IQ, data=dt, geom="boxplot")
x1 <- rep(1,40)
x2 <- rep(2,40)
ggplot(data=dt, aes(x=c(x1, x2), y=c(dt$IQ, dt$noseMovie))) + geom_point()
ggplot(data=dt, aes(x=x1, y=dt$IQ) + geom_point()
#qplot(IQ, data=dt, geom="boxplot")
ggplot(data=dt, aes(x=x1, y=dt$IQ)) + geom_point()
x1 <- rep(1,40)
x2 <- rep(2,40)
ggplot(data=dt, aes(x=x1, y=dt$IQ)) + geom_point()
#qplot(IQ, data=dt, geom="boxplot")
# if you need to install the ggplot library:
# install.packages("ggplot2", dependencies=TRUE)
library(ggplot2)  # useful plotting library
qplot(IQ, data=dt,
binwidth=5,
main="Histogram for IQ",
col=I("white"))
# if you need to install the ggplot library:
# install.packages("ggplot2", dependencies=TRUE)
library(ggplot2)  # useful plotting library
qplot(IQ, data=dt,
binwidth=5,
main="Histogram for IQ",
col=I("white"))
dt$IQ
shapiro.test(dt$IQ)
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
qplot(IQ, data=dt_pop,
binwidth=5,
main="Histogram for IQ (500 samples)",
col=I("white"))
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ)) + geom_histogram(binwidth=5)
h + ggplot(dt, aes(x=IQ)) + geom_histogram(binwidth=5)
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
h <- ggplot(dt_pop, aes(x=IQ)) + geom_histogram(binwidth=5)
h + ggplot(dt, aes(x=IQ)) + geom_histogram(binwidth=5)
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
h <- ggplot(dt_pop, aes(x=IQ)) + geom_histogram(binwidth=5)
h + geom_point(colour="red")
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
h <- ggplot(dt_pop, aes(x=IQ)) + geom_histogram(binwidth=5)
h + geom_density()
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ)) +
geom_histogram(binwidth=5, fill="cornstalk") +
geom_density()
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ)) +
geom_histogram(binwidth=5, fill="cornsilk") +
geom_density()
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ, y=..density..)) +
geom_histogram(binwidth=5, fill="cornsilk") +
geom_density()
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ, y=..density..)) +
geom_histogram(binwidth=5, size=.2) +
geom_density(colour="red")
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ, y=..density..)) +
geom_histogram(binwidth=5, size=.2, col="white") +
geom_density(colour="red")
mean(dt_pop$IQ)
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ, y=..density..)) +
geom_histogram(binwidth=5, size=.2, col="white") +
geom_density(colour="black") +
geom_vline(xintercept=mean(dt_pop$IQ))
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ, y=..density..)) +
geom_histogram(binwidth=5, size=.2, col="white") +
geom_density(colour="black") +
geom_vline(xintercept=mean(dt_pop$IQ), color="red")
# read in larger population datatable
dt_pop <- read.csv('data/exampleData_population.tsv', sep='\t', row.names=1)
# plot the histogram for IQ scores from larger population
#qplot(IQ, data=dt_pop,
#      binwidth=5,
#      main="Histogram for IQ (500 samples)",
#      col=I("white"))
ggplot(dt_pop, aes(x=IQ, y=..density..)) +
geom_histogram(binwidth=5, size=.2, col="white") +
geom_density(colour="black") +
geom_vline(xintercept=mean(dt_pop$IQ), color="red") +
ggtitle("Histogram for IQ (500 samples)")
shapiro.test(dt$IQ)
shapiro.test(dt$IQ)
shapiro.test(dt$IQ)
qqplot(dt$IQ)
stat_qq(IQ, data=dt)
ggplot(dt, aes(sample=IQ))+stat_qq()
cor(dt$IQ, dt$noseAthlete)
rcorr(dt$IQ, dt$noseAthlete)
corr.test(dt$IQ, dt$noseAthlete)
corr.test(dt$IQ, y=dt$noseAthlete)
cor.test(dt$IQ, y=dt$noseAthlete)
# Compute the correlation coefficient, and determine if the relationship is significant
cor.test(dt$IQ, y=dt$noseAthlete)
qplot(IQ, noseAthlete, data=dt)
ggplot(dt, aes(x=IQ, y=noseAthlete, size=20)) +
geom_point()
ggplot(dt, aes(x=IQ, y=noseAthlete, size=20, alpha=0.5)) +
geom_point()
ggplot(dt, aes(x=IQ, y=noseAthlete)) +
geom_point(size=20)
ggplot(dt, aes(x=IQ, y=noseAthlete)) +
geom_point(size=10)
ggplot(dt, aes(x=IQ, y=noseAthlete)) +
geom_point(size=7, alpha=.7)
ggplot(dt, aes(x=IQ, y=noseAthlete)) +
geom_point(size=7, alpha=.5)
ggplot(dt, aes(x=IQ, y=noseAthlete)) +
geom_point(size=7, alpha=.5) +
geom_smooth(method=lm, color="red")
ggplot(dt, aes(x=IQ, y=noseAthlete)) +
geom_point(size=7, alpha=.5)
# code for running a basic linear model in R
lm(noseAthlete ~ IQ, data=dt)
# code for running a basic linear model in R
lmMod = lm(noseAthlete ~ IQ, data=dt)
summary(lmMod)
ggplot(dt, aes(x=IQ, y=noseAthlete)) +
geom_point(size=7, alpha=.5) +
geom_smooth(method=lm, color="red")
