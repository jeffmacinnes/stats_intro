t.test(dt$IQ, mu=100)
# code for one-sample t-test
t.test(dt$IQ, mu=100)
# plot the histogram for IQ scores
ggplot(dt, aes(x=IQ)) +
geom_histogram(binwidth=5, size=.2, col="white") +
geom_vline(xintercept=mean(dt$IQ), color="red") +
geom_vline(xintercept=100, color="green") +
ggtitle("Histogram for IQ (40 samples)")
# paired samples t-test
t.test(dt$noseAthlete, dt$noseNobel, paired=TRUE)
dt
row.names(dt)
melt(dt)
library(reshape2)
melt(dt)
melt(dt, measure.vars = c("noseAthlete", "noseNobel"))
a <- melt(dt, measure.vars = c("noseAthlete", "noseNobel"))
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt_long <- melt(dt, measure.vars = c("noseAthlete", "noseNobel"))
ggplot(dt_long, aes(x=variable, y=value)) +
geom_bar(stat="identity", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt_long <- melt(dt, measure.vars = c("noseAthlete", "noseNobel"))
ggplot(dt_long, aes(x=variable, y=value)) +
geom_bar(stat="mean", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt_long <- melt(dt, id.vars=row.names(dt), measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)
dt_long <- melt(dt, id.vars=ID, measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
dt
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
ggplot(dt_long, aes(x=variable, y=value)) +
geom_bar(stat="mean", width=0.5)
dt_long
summary(dt_long)
dt.IQ
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
dt_long$ID <- factor(dt_long$ID)  # make factor var
summary(dt_long)
#ggplot(dt_long, aes(x=variable, y=value)) +
#  geom_bar(stat="mean", width=0.5)
dt_long
View(dt_long)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
summary(dt_long)
#ggplot(dt_long, aes(x=variable, y=value)) +
#  geom_bar(stat="mean", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
summary(dt_long)
ggplot(dt_long, aes(x=variable, y=value)) +
+ stat_summary(fun.y=mean, geom="bar")
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
summary(dt_long)
ggplot(dt_long, aes(x=variable, y=value)) +
stat_summary(fun.y=mean, geom="bar")
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="noseFixationTime")
ggplot(dt_long, aes(x=noseFixationTime, y=value)) +
stat_summary(fun.y=mean, geom="bar")
summary(dt_long)
describe(dt_long)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="group")
ggplot(dt_long, aes(x=group, y=value)) +
stat_summary(fun.y=mean, geom="bar")
describe.by(dt_long, group=imageType)
describeBy(dt_long, group="imageType")
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
ggplot(dt_long, aes(x=group, y=value)) +
stat_summary(fun.y=mean, geom="bar")
describeBy(dt_long, group="imageType")
a <- describeBy(dt_long, group="imageType")
a[0].mean
a$noseAthlete$mean
mean(dt_long)
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, mean=mean(value))
imageType_means
ggplot(imageType_means, aes(x=imageType, y=mean)) +
geom_bar()
ggplot(imageType_means, aes(x=imageType)) +
geom_bar()
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, mean=mean(value))
ggplot(imageType_means, aes(x=imageType)) +
geom_bar(colour="black", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
geom_bar(colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
geom_bar(stat="identity", colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot()
#ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
# geom_bar(stat="identity", colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot(fill="smoke")
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value, fill="smoke")) +
geom_boxplot()
#ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
# geom_bar(stat="identity", colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot()
#ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
# geom_bar(stat="identity", colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot(fill="red")
#ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
# geom_bar(stat="identity", colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot(fill="A4A4A4")
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot(fill="#A4A4A4")
#ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
# geom_bar(stat="identity", colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# caclulate the mean by imageType
library(plyr)
imageType_means <- ddply(dt_long, c("imageType"), summarise, meanFix=mean(value))
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot(fill="#A4A4A4") +
ylim(0, 500)
#ggplot(imageType_means, aes(x=imageType, y=meanFix)) +
# geom_bar(stat="identity", colour="white", width=0.5)
# we first need to convert these variables in the table from wide to long format (more on this under ANOVAs)
library(reshape2)
dt$ID <- 1:nrow(dt)    # create ID col
dt_long <- melt(dt, id.vars="ID", measure.vars = c("noseAthlete", "noseNobel"), variable.name="imageType")
# make box plot of the two measures
ggplot(dt_long, aes(x=imageType, y=value)) +
geom_boxplot(fill="#A4A4A4") +
ylim(0, 500)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
# plot the two distibutions
a <- c(durm, ch)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, colour=city)) +
geom_density(alpha=.5)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, colour=city)) +
geom_histogram(alpha=.5)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city, colour="white")) +
geom_histogram(alpha=.5)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_histogram(position="identity", alpha=.5)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_histogram(position="identity", alpha=.35)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_histogram(position="identity", alpha=.35, col="white")
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_histogram(position="identity", alpha=.35, col="white") +
geom_density()
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_histogram(binwidth=5, size=.2, position="identity", alpha=.35, col="white") +
geom_density()
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city, colour='black')) +
geom_histogram(binwidth=3, size=.2, position="identity", alpha=.35, col="white") +
geom_density()
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3)
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3, colour=city) +
ggtitle("Distribution of heights")
# set random number seed for later reproducibility
set.seed(100)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3) +
ggtitle("Distribution of heights")
# set random number seed for later reproducibility
set.seed(500)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3) +
ggtitle("Distribution of heights")
# set random number seed for later reproducibility
set.seed(500)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3) +
xlim(40, 90) +
ggtitle("Distribution of heights")
# set random number seed for later reproducibility
set.seed(500)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3) +
xlim(40, 90) +
ggtitle("Distribution of heights")
# independent samples t-test
t.test(dt$noseAthlete, dt$noseNobel, paired=FALSE)
# independent samples t-test
t.test(durhamHeights, chapHeights, paired=FALSE)
# set random number seed for later reproducibility
set.seed(500)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=68, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3) +
xlim(40, 90) +
ggtitle("Distribution of heights")
# independent samples t-test
t.test(durhamHeights, chapHeights, paired=FALSE)
# set random number seed for later reproducibility
set.seed(500)
# generate sample data from normal distributions
durhamHeights = rnorm(200, mean=68, sd=5)
durm = rep("durm", 200)
chapHeights = rnorm(200, mean=66.8, sd=6)
ch = rep("ch", 200)
# make dataframe
city <- c(durm, ch)
heights <- c(durhamHeights, chapHeights)
height_dt <- data.frame(city, heights)
# plot the two distibutions
ggplot(height_dt, aes(x=heights, fill=city)) +
geom_density(alpha=0.3) +
xlim(40, 90) +
ggtitle("Distribution of heights")
# independent samples t-test
t.test(durhamHeights, chapHeights, paired=FALSE)
